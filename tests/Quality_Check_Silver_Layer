-- ==============================================================
-- Test Scripts for Silver Layer Tables (PostgreSQL)
-- Author: Suchit Pathak
-- Description: Quality checks for data validation, consistency,
--              and cleaning validation after Silver Layer Load
-- ==============================================================

-- ================= CRM Customer Info =================
SELECT * FROM bronze.crm_cust_info;

-- Check for duplicates and nulls in Primary Key
SELECT cst_id, count(*) 
FROM bronze.crm_cust_info
GROUP BY cst_id
HAVING count(*) > 1 OR cst_id IS NULL;

-- Check for unwanted spaces in gender
SELECT cst_gndr
FROM bronze.crm_cust_info
WHERE cst_gndr != TRIM(cst_gndr);

-- Check for standardized gender values
SELECT DISTINCT cst_gndr
FROM bronze.crm_cust_info;

-- ================= CRM Product Info =================
-- Check for duplicates and nulls in Product ID
SELECT prd_id, count(*) 
FROM silver.crm_prd_info
GROUP BY prd_id
HAVING count(*) > 1 OR prd_id IS NULL;

-- Unwanted spaces in product name
SELECT prd_nm
FROM silver.crm_prd_info
WHERE prd_nm != TRIM(prd_nm);

-- Nulls or negative values in cost
SELECT prd_cost
FROM silver.crm_prd_info
WHERE prd_cost < 0 OR prd_cost IS NULL;

-- Check product line values
SELECT DISTINCT prd_line
FROM silver.crm_prd_info;

-- Invalid product date ranges
SELECT * FROM silver.crm_prd_info
WHERE prd_end_dt < prd_start_dt;

-- Check expected end date logic
SELECT 
  prd_id, 
  prd_key,
  prd_nm,
  prd_start_dt,
  LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)-1 AS prd_end_dt_test
FROM bronze.crm_prd_info
WHERE prd_key IN ('AC-HE-HL-U509-R', 'AC-HE-HL-U509');

-- Final verification
SELECT * FROM silver.crm_prd_info;

-- ================= CRM Sales Details =================
-- Invalid order dates
SELECT sls_order_dt
FROM silver.crm_sales_details
WHERE sls_order_dt = 0;

-- Fix zero dates
UPDATE bronze.crm_sales_details
SET sls_order_dt = NULL
WHERE sls_order_dt = '0';

-- Check nulls after fix
SELECT *
FROM bronze.crm_sales_details
WHERE sls_order_dt IS NULL;

-- Invalid date length
SELECT *
FROM bronze.crm_sales_details
WHERE LENGTH(sls_order_dt) <> 8;

-- Fix invalid lengths
UPDATE bronze.crm_sales_details
SET sls_order_dt = NULL
WHERE sls_order_dt IS NOT NULL
  AND LENGTH(sls_order_dt) <> 8;

-- Check date consistency
SELECT * FROM silver.crm_sales_details
WHERE sls_order_dt > sls_ship_dt OR sls_order_dt > sls_due_dt;

-- Check sales consistency
SELECT DISTINCT
  sls_sales,
  sls_quantity,
  sls_price
FROM silver.crm_sales_details
WHERE sls_sales != sls_quantity * sls_price 
   OR sls_sales IS NULL OR sls_quantity IS NULL OR sls_price IS NULL
   OR sls_sales <= 0 OR sls_quantity <= 0 OR sls_price <= 0
ORDER BY sls_sales, sls_quantity, sls_price;

-- Final look
SELECT * FROM silver.crm_sales_details;

-- ================= ERP Customer =================
-- Invalid birthdates
SELECT bdate
FROM silver.erp_cust_az12
WHERE bdate < DATE '1924-01-01' OR bdate > CURRENT_DATE;

-- Gender standardization
SELECT DISTINCT gen
FROM silver.erp_cust_az12;

-- Final check
SELECT * FROM silver.erp_cust_az12;

-- ================= ERP Location =================
-- Country values
SELECT DISTINCT cntry
FROM silver.erp_loc_a101;

-- Final check
SELECT * FROM silver.erp_loc_a101;

-- ================= ERP Product Category =================
-- Unwanted spaces
SELECT * FROM bronze.erp_px_cat_g1v2
WHERE cat != TRIM(cat) OR subcat != TRIM(subcat) OR maintenance != TRIM(maintenance);

-- Standardization
SELECT DISTINCT maintenance FROM bronze.erp_px_cat_g1v2;

-- Final check
SELECT * FROM silver.erp_px_cat_g1v2;

